{"version":3,"file":"static/js/145.15cd3ddd.chunk.js","mappings":"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","sources":["components/SearchForm/SearchForm.jsx","pages/Movies/Movies.jsx","service-api/service-api.jsx"],"sourcesContent":["import { useState } from 'react';\nimport { toast } from 'react-toastify';\nimport PropTypes from 'prop-types';\n\nexport const SearchForm = ({ onChange }) => {\n  const [inputValue, setInputValue] = useState('');\n\n  const handleQueryChange = e => {\n    setInputValue(e.currentTarget.value.toLowerCase());\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (inputValue.trim() === '') {\n      toast.warn('Please enter search query!');\n      return;\n    }\n    onChange(inputValue);\n    // setInputValue('');\n  };\n\n  return (\n    <main style={{ padding: 3, backgroundColor: 'bisque' }}>\n      <form onSubmit={handleSubmit}>\n        <label>\n          <input\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search for movie\"\n            value={inputValue}\n            onChange={handleQueryChange}\n          />\n          <button type=\"submit\">Search</button>\n        </label>\n      </form>\n    </main>\n  );\n};\n\nSearchForm.propTypes = {\n  onChange: PropTypes.func.isRequired,\n};\n","import { useState, useEffect, Suspense } from 'react';\nimport { useSearchParams, Link, Outlet, useLocation } from 'react-router-dom';\nimport { SearchForm } from '../../components/SearchForm/SearchForm';\nimport { getSearchedFilms } from '../../service-api/service-api';\nimport Spinner from '../../components/Loader/Loader';\n\nconst Movies = () => {\n  const [searchedFilms, setSearchedFilms] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const location = useLocation();\n  const query = searchParams.get('query' ?? '');\n\n  useEffect(() => {\n    if (!query) {\n      return;\n    }\n\n    getSearchedFilms(query).then(response => {\n      if (!response) {\n        return;\n      }\n      setSearchedFilms(response);\n    });\n  }, [query]);\n\n  const onSearchSubmit = value => {\n    setSearchParams(value !== '' ? { query: value } : {});\n  };\n\n  return (\n    <main style={{ padding: 20, backgroundColor: 'palevioletred' }}>\n      <SearchForm onChange={onSearchSubmit} />\n      <ul>\n        {searchedFilms.map(({ id, title }) => (\n          <li key={id}>\n            <Link to={`${id}`} state={{ from: location }}>\n              {title}\n            </Link>\n          </li>\n        ))}\n      </ul>\n      <Suspense fallback={<Spinner />}>\n        <Outlet />\n      </Suspense>\n    </main>\n  );\n};\n\nexport default Movies;\n","import { toast } from 'react-toastify';\nimport axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport const getTrendingFilms = async () => {\n  const searchParams = new URLSearchParams({\n    api_key: 'f473c515ad1de0efd576d9ff7cafa2d6',\n    page: 1,\n  });\n\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/trending/movie/week?${searchParams}`\n    );\n\n    return response.data.results;\n  } catch (error) {\n    toast.error('Something went wrong! An error occurred!', {\n      position: 'top-right',\n      autoClose: 3000,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      theme: 'colored',\n    });\n  }\n};\n\nexport const getSearchedFilms = async query => {\n  const searchParams = new URLSearchParams({\n    api_key: 'f473c515ad1de0efd576d9ff7cafa2d6',\n    query: `${query}`,\n  });\n\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/search/movie?${searchParams}`\n    );\n\n    if (response.data.results.length === 0) {\n      toast.warn('Please enter right query!');\n      return;\n    }\n\n    return response.data.results;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const getMovieDetails = async movieId => {\n  const searchParams = new URLSearchParams({\n    api_key: 'f473c515ad1de0efd576d9ff7cafa2d6',\n  });\n\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/movie/${movieId}?${searchParams}`\n    );\n\n    return response.data;\n  } catch (error) {\n    toast.error('Something went wrong! An error occurred!', {\n      position: 'top-right',\n      autoClose: 3000,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      theme: 'colored',\n    });\n  }\n};\n\nexport const getMovieCast = async movieId => {\n  const searchParams = new URLSearchParams({\n    api_key: 'f473c515ad1de0efd576d9ff7cafa2d6',\n  });\n\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/movie/${movieId}/credits?${searchParams}`\n    );\n\n    return response.data.cast;\n  } catch (error) {\n    toast.error('Something went wrong! An error occurred!', {\n      position: 'top-right',\n      autoClose: 3000,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      theme: 'colored',\n    });\n  }\n};\n\nexport const getReviews = async movieId => {\n  const searchParams = new URLSearchParams({\n    api_key: 'f473c515ad1de0efd576d9ff7cafa2d6',\n  });\n\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/movie/${movieId}/reviews?${searchParams}`\n    );\n\n    return response.data.results;\n  } catch (error) {\n    toast.error('Something went wrong! An error occurred!', {\n      position: 'top-right',\n      autoClose: 3000,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      theme: 'colored',\n    });\n  }\n};\n"],"names":["SearchForm","onChange","useState","inputValue","setInputValue","style","padding","backgroundColor","onSubmit","e","preventDefault","trim","toast","type","autoComplete","autoFocus","placeholder","value","currentTarget","toLowerCase","searchedFilms","setSearchedFilms","useSearchParams","searchParams","setSearchParams","location","useLocation","query","get","useEffect","getSearchedFilms","then","response","map","id","title","to","state","from","Suspense","fallback","BASE_URL","getTrendingFilms","URLSearchParams","api_key","page","axios","data","results","position","autoClose","closeOnClick","pauseOnHover","draggable","theme","length","console","log","message","getMovieDetails","movieId","getMovieCast","cast","getReviews"],"sourceRoot":""}