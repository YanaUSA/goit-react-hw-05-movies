{"version":3,"file":"static/js/729.8fa580e9.chunk.js","mappings":"mQAMaA,EAAe,WAAO,IAAD,IAChC,GAAwCC,EAAAA,EAAAA,UAAS,MAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,MAMjB,IAJAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAgBC,OAAON,IAAUO,KAAKR,EACvC,GAAE,CAACC,KAECF,EACH,OAAO,KAGT,IAAQU,EAAuDV,EAAvDU,YAAaC,EAA0CX,EAA1CW,MAAOC,EAAmCZ,EAAnCY,aAAcC,EAAqBb,EAArBa,SAAUC,EAAWd,EAAXc,OAO9CC,EAAY,oBAAGX,EAASY,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,UAE7C,OACE,kBAAMC,MAAO,CAAEC,QAAS,GAAIC,gBAAiB,UAA7C,WACE,UAAC,KAAD,CAAMC,GAAIN,EAAcG,MAAO,CAAEI,OAAQ,EAAGC,MAAO,KAAnD,WACE,SAAC,MAAD,IADF,cAIA,4BACE,gBACEL,MAAO,CAAEK,MAAO,KAChBC,IAAG,6CAAwCd,GAC3Ce,IAAKd,KAEP,wBAAKA,KACL,wCAAgBe,KAAKC,MAAqB,GAAff,GAA3B,QACA,sCACA,uBAAIC,KACJ,oCACA,wBACGC,EAAOc,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAP,OACV,wBAAcA,GAALD,EADC,UAKhB,sDAEE,wBAhCW,CACf,CAAEE,KAAM,OAAQD,KAAM,QACtB,CAAEC,KAAM,UAAWD,KAAM,YA+BTF,KAAI,gBAAGG,EAAH,EAAGA,KAAMD,EAAT,EAASA,KAAT,OACZ,eAAeZ,MAAO,CAAEC,QAAS,IAAjC,UACE,SAAC,KAAD,CAAME,GAAIU,EAAMf,MAAO,CAAEC,KAAMF,GAA/B,SACGe,KAFIC,EADG,UASlB,SAAC,EAAAC,SAAD,CAAUC,UAAU,SAAC,IAAD,IAApB,UACE,SAAC,KAAD,QAIP,C","sources":["pages/Movies/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport { useState, useEffect, Suspense } from 'react';\nimport { BsArrowLeft } from 'react-icons/bs';\nimport { getMovieDetails } from '../../../service-api/service-api';\nimport { Spinner } from '../../../components/Loader/Loader';\n\nexport const MovieDetails = () => {\n  const [movieDetails, setMovieDetails] = useState(null);\n  const { movieId } = useParams();\n  const location = useLocation();\n\n  useEffect(() => {\n    getMovieDetails(Number(movieId)).then(setMovieDetails);\n  }, [movieId]);\n\n  if (!movieDetails) {\n    return null;\n  }\n\n  const { poster_path, title, vote_average, overview, genres } = movieDetails;\n\n  const linkItem = [\n    { href: 'cast', name: 'Cast' },\n    { href: 'reviews', name: 'Reviews' },\n  ];\n\n  const backLinkHref = location.state?.from ?? '/movies';\n\n  return (\n    <main style={{ padding: 20, backgroundColor: 'bisque' }}>\n      <Link to={backLinkHref} style={{ border: 2, width: 200 }}>\n        <BsArrowLeft />\n        Go back\n      </Link>\n      <div>\n        <img\n          style={{ width: 200 }}\n          src={`https://image.tmdb.org/t/p/original${poster_path}`}\n          alt={title}\n        />\n        <h2>{title}</h2>\n        <p>User score: {Math.round(vote_average * 10)}%</p>\n        <h3>Overview</h3>\n        <p>{overview}</p>\n        <h3>Genres</h3>\n        <ul>\n          {genres.map(({ id, name }) => (\n            <li key={id}>{name}</li>\n          ))}\n        </ul>\n      </div>\n      <div>\n        Additional information:\n        <ul>\n          {linkItem.map(({ href, name }) => (\n            <li key={href} style={{ padding: 10 }}>\n              <Link to={href} state={{ from: backLinkHref }}>\n                {name}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      </div>\n      <Suspense fallback={<Spinner />}>\n        <Outlet />\n      </Suspense>\n    </main>\n  );\n};\n"],"names":["MovieDetails","useState","movieDetails","setMovieDetails","movieId","useParams","location","useLocation","useEffect","getMovieDetails","Number","then","poster_path","title","vote_average","overview","genres","backLinkHref","state","from","style","padding","backgroundColor","to","border","width","src","alt","Math","round","map","id","name","href","Suspense","fallback"],"sourceRoot":""}