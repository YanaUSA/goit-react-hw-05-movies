{"version":3,"file":"static/js/490.94c26774.chunk.js","mappings":"8LAsCA,UAlCgB,WACd,OAA8BA,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAaR,OAXAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAWC,OAAOJ,IAAUK,MAAK,SAAAC,GAC/B,IAAMC,EAAqBD,EAASE,KAAI,kBAA8B,CACpEC,GADsC,EAAGA,GAEzCC,QAFsC,EAAOA,QAG7CC,OAHsC,EAAgBA,OAAhB,IAKxCZ,EAAWQ,EACZ,GACF,GAAE,CAACP,IAECF,GAKH,4BACIA,EAAQc,SAAU,sEACpB,wBACGd,EAAQU,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,QAASC,EAAhB,EAAgBA,OAAhB,OACX,2BACE,qCAAaA,MACb,uBAAID,MAFGD,EADE,SAPV,IAgBV,C","sources":["pages/Movies/MovieDetails/Reviews/Reviews.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getReviews } from '../../../../service-api/service-api';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    getReviews(Number(movieId)).then(response => {\n      const fetchedReviewsData = response.map(({ id, content, author }) => ({\n        id,\n        content,\n        author,\n      }));\n      setReviews(fetchedReviewsData);\n    });\n  }, [movieId]);\n\n  if (!reviews) {\n    return null;\n  }\n\n  return (\n    <div>\n      {!reviews.length && <p>We don't have any reviews for this movie.</p>}\n      <ul>\n        {reviews.map(({ id, content, author }) => (\n          <li key={id}>\n            <h3>Author: {author}</h3>\n            <p>{content}</p>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Reviews;\n"],"names":["useState","reviews","setReviews","movieId","useParams","useEffect","getReviews","Number","then","response","fetchedReviewsData","map","id","content","author","length"],"sourceRoot":""}