{"version":3,"file":"static/js/544.81c9719f.chunk.js","mappings":"6MAmCA,UA/Ba,WACX,OAAgCA,EAAAA,EAAAA,UAAS,IAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KACMC,GAAWC,EAAAA,EAAAA,MAYjB,OAVAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,MAAmBC,MAAK,SAAAC,GACtB,IAAMC,EAAkBD,EAASE,KAAI,kBAAoB,CACvDC,GADmC,EAAGA,GAEtCC,MAFmC,EAAOA,MAAP,IAIrCV,EAAYO,EACb,GACF,GAAE,KAGD,kBAAMI,MAAO,CAAEC,QAAS,GAAIC,gBAAiB,UAA7C,WACE,4CACA,wBACGd,EAASe,OAAS,GACjBf,EAASS,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OACX,yBACE,SAAC,KAAD,CAAMK,GAAE,kBAAaN,GAAMO,MAAO,CAAEC,KAAMhB,GAA1C,SACGS,KAFID,EADE,QAUtB,C,6MC9BKS,EAAW,+BAEJd,EAAgB,mCAAG,6FACxBe,EAAe,IAAIC,gBAAgB,CACvCC,QAAS,mCACTC,KAAM,IAHsB,kBAOLC,EAAAA,EAAAA,IAAA,UAClBL,EADkB,gCACcC,IART,cAOtBb,EAPsB,yBAWrBA,EAASkB,KAAKC,SAXO,gCAa5BC,EAAAA,GAAAA,MAAY,2CAA4C,CACtDC,SAAU,YACVC,UAAW,IACXC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,MAAO,YAnBmB,yDAAH,qDAwBhBC,EAAgB,mCAAG,WAAMC,GAAN,gFACxBf,EAAe,IAAIC,gBAAgB,CACvCC,QAAS,mCACTa,MAAM,GAAD,OAAKA,KAHkB,kBAOLX,EAAAA,EAAAA,IAAA,UAClBL,EADkB,yBACOC,IARF,UAWS,KAJ/Bb,EAPsB,QAWfkB,KAAKC,QAAQX,OAXE,uBAY1BY,EAAAA,GAAAA,KAAW,6BAZe,mDAgBrBpB,EAASkB,KAAKC,SAhBO,kCAkB5BU,QAAQC,IAAI,KAAMC,SAlBU,0DAAH,sDAsBhBC,EAAe,mCAAG,WAAMC,GAAN,gFACvBpB,EAAe,IAAIC,gBAAgB,CACvCC,QAAS,qCAFkB,kBAMJE,EAAAA,EAAAA,IAAA,UAClBL,EADkB,kBACAqB,EADA,YACWpB,IAPP,cAMrBb,EANqB,yBAUpBA,EAASkB,MAVW,gCAY3BE,EAAAA,GAAAA,MAAY,2CAA4C,CACtDC,SAAU,YACVC,UAAW,IACXC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,MAAO,YAlBkB,yDAAH,sDAuBfQ,EAAY,mCAAG,WAAMD,GAAN,gFACpBpB,EAAe,IAAIC,gBAAgB,CACvCC,QAAS,qCAFe,kBAMDE,EAAAA,EAAAA,IAAA,UAClBL,EADkB,kBACAqB,EADA,oBACmBpB,IAPlB,cAMlBb,EANkB,yBAUjBA,EAASkB,KAAKiB,MAVG,gCAYxBf,EAAAA,GAAAA,MAAY,2CAA4C,CACtDC,SAAU,YACVC,UAAW,IACXC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,MAAO,YAlBe,yDAAH,sDAuBZU,EAAU,mCAAG,WAAMH,GAAN,gFAClBpB,EAAe,IAAIC,gBAAgB,CACvCC,QAAS,qCAFa,kBAMCE,EAAAA,EAAAA,IAAA,UAClBL,EADkB,kBACAqB,EADA,oBACmBpB,IAPpB,cAMhBb,EANgB,yBAUfA,EAASkB,KAAKC,SAVC,gCAYtBC,EAAAA,GAAAA,MAAY,2CAA4C,CACtDC,SAAU,YACVC,UAAW,IACXC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,MAAO,YAlBa,yDAAH,qD","sources":["pages/Home/Home.jsx","service-api/service-api.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { getTrendingFilms } from '../../service-api/service-api';\n\nconst Home = () => {\n  const [filmData, setFilmData] = useState([]);\n  const location = useLocation();\n\n  useEffect(() => {\n    getTrendingFilms().then(response => {\n      const fetchedFilmData = response.map(({ id, title }) => ({\n        id,\n        title,\n      }));\n      setFilmData(fetchedFilmData);\n    });\n  }, []);\n\n  return (\n    <main style={{ padding: 20, backgroundColor: 'bisque' }}>\n      <h1>Trending today</h1>\n      <ul>\n        {filmData.length > 0 &&\n          filmData.map(({ id, title }) => (\n            <li key={id}>\n              <Link to={`/movies/${id}`} state={{ from: location }}>\n                {title}\n              </Link>\n            </li>\n          ))}\n      </ul>\n    </main>\n  );\n};\n\nexport default Home;\n","import { toast } from 'react-toastify';\nimport axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport const getTrendingFilms = async () => {\n  const searchParams = new URLSearchParams({\n    api_key: 'f473c515ad1de0efd576d9ff7cafa2d6',\n    page: 1,\n  });\n\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/trending/movie/week?${searchParams}`\n    );\n\n    return response.data.results;\n  } catch (error) {\n    toast.error('Something went wrong! An error occurred!', {\n      position: 'top-right',\n      autoClose: 3000,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      theme: 'colored',\n    });\n  }\n};\n\nexport const getSearchedFilms = async query => {\n  const searchParams = new URLSearchParams({\n    api_key: 'f473c515ad1de0efd576d9ff7cafa2d6',\n    query: `${query}`,\n  });\n\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/search/movie?${searchParams}`\n    );\n\n    if (response.data.results.length === 0) {\n      toast.warn('Please enter right query!');\n      return;\n    }\n\n    return response.data.results;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const getMovieDetails = async movieId => {\n  const searchParams = new URLSearchParams({\n    api_key: 'f473c515ad1de0efd576d9ff7cafa2d6',\n  });\n\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/movie/${movieId}?${searchParams}`\n    );\n\n    return response.data;\n  } catch (error) {\n    toast.error('Something went wrong! An error occurred!', {\n      position: 'top-right',\n      autoClose: 3000,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      theme: 'colored',\n    });\n  }\n};\n\nexport const getMovieCast = async movieId => {\n  const searchParams = new URLSearchParams({\n    api_key: 'f473c515ad1de0efd576d9ff7cafa2d6',\n  });\n\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/movie/${movieId}/credits?${searchParams}`\n    );\n\n    return response.data.cast;\n  } catch (error) {\n    toast.error('Something went wrong! An error occurred!', {\n      position: 'top-right',\n      autoClose: 3000,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      theme: 'colored',\n    });\n  }\n};\n\nexport const getReviews = async movieId => {\n  const searchParams = new URLSearchParams({\n    api_key: 'f473c515ad1de0efd576d9ff7cafa2d6',\n  });\n\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/movie/${movieId}/reviews?${searchParams}`\n    );\n\n    return response.data.results;\n  } catch (error) {\n    toast.error('Something went wrong! An error occurred!', {\n      position: 'top-right',\n      autoClose: 3000,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      theme: 'colored',\n    });\n  }\n};\n"],"names":["useState","filmData","setFilmData","location","useLocation","useEffect","getTrendingFilms","then","response","fetchedFilmData","map","id","title","style","padding","backgroundColor","length","to","state","from","BASE_URL","searchParams","URLSearchParams","api_key","page","axios","data","results","toast","position","autoClose","closeOnClick","pauseOnHover","draggable","theme","getSearchedFilms","query","console","log","message","getMovieDetails","movieId","getMovieCast","cast","getReviews"],"sourceRoot":""}