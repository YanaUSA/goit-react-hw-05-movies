{"version":3,"file":"static/js/433.d90c723c.chunk.js","mappings":"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","sources":["pages/Movies/MovieDetails/Cast/Cast.jsx","service-api/service-api.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieCast } from '../../../../service-api/service-api';\nimport noImage from '../../../../components/Images/no-img.jpg';\n\nconst Cast = () => {\n  const [cast, setCast] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    getMovieCast(Number(movieId)).then(response => {\n      const fetchedCastData = response.map(\n        ({ id, profile_path, name, character }) => ({\n          id,\n          profile_path,\n          name,\n          character,\n        })\n      );\n\n      setCast(fetchedCastData);\n    });\n  }, [movieId]);\n  if (!cast) {\n    return null;\n  }\n\n  return (\n    <div>\n      <ul>\n        {cast.map(({ id, profile_path, name, character }) => (\n          <li key={id}>\n            {!profile_path ? (\n              <img\n                style={{ width: 50 }}\n                src={noImage}\n                alt={`${'No image available'}`}\n              />\n            ) : (\n              <img\n                style={{ width: 50 }}\n                src={`https://image.tmdb.org/t/p/original${profile_path}`}\n                alt={name}\n              />\n            )}\n\n            <h4>{name}</h4>\n            <p>Character: {character}</p>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Cast;\n","import { toast } from 'react-toastify';\nimport axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport const getTrendingFilms = async () => {\n  const searchParams = new URLSearchParams({\n    api_key: 'f473c515ad1de0efd576d9ff7cafa2d6',\n    page: 1,\n  });\n\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/trending/movie/week?${searchParams}`\n    );\n\n    return response.data.results;\n  } catch (error) {\n    toast.error('Something went wrong! An error occurred!', {\n      position: 'top-right',\n      autoClose: 3000,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      theme: 'colored',\n    });\n  }\n};\n\nexport const getSearchedFilms = async query => {\n  const searchParams = new URLSearchParams({\n    api_key: 'f473c515ad1de0efd576d9ff7cafa2d6',\n    query: `${query}`,\n  });\n\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/search/movie?${searchParams}`\n    );\n\n    if (response.data.results.length === 0) {\n      toast.warn('Please enter right query!');\n      return;\n    }\n\n    return response.data.results;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const getMovieDetails = async movieId => {\n  const searchParams = new URLSearchParams({\n    api_key: 'f473c515ad1de0efd576d9ff7cafa2d6',\n  });\n\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/movie/${movieId}?${searchParams}`\n    );\n\n    return response.data;\n  } catch (error) {\n    toast.error('Something went wrong! An error occurred!', {\n      position: 'top-right',\n      autoClose: 3000,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      theme: 'colored',\n    });\n  }\n};\n\nexport const getMovieCast = async movieId => {\n  const searchParams = new URLSearchParams({\n    api_key: 'f473c515ad1de0efd576d9ff7cafa2d6',\n  });\n\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/movie/${movieId}/credits?${searchParams}`\n    );\n\n    return response.data.cast;\n  } catch (error) {\n    toast.error('Something went wrong! An error occurred!', {\n      position: 'top-right',\n      autoClose: 3000,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      theme: 'colored',\n    });\n  }\n};\n\nexport const getReviews = async movieId => {\n  const searchParams = new URLSearchParams({\n    api_key: 'f473c515ad1de0efd576d9ff7cafa2d6',\n  });\n\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/movie/${movieId}/reviews?${searchParams}`\n    );\n\n    return response.data.results;\n  } catch (error) {\n    toast.error('Something went wrong! An error occurred!', {\n      position: 'top-right',\n      autoClose: 3000,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      theme: 'colored',\n    });\n  }\n};\n"],"names":["useState","cast","setCast","movieId","useParams","useEffect","getMovieCast","Number","then","response","fetchedCastData","map","id","profile_path","name","character","style","width","src","alt","noImage","BASE_URL","getTrendingFilms","searchParams","URLSearchParams","api_key","page","axios","data","results","toast","position","autoClose","closeOnClick","pauseOnHover","draggable","theme","getSearchedFilms","query","length","console","log","message","getMovieDetails","getReviews"],"sourceRoot":""}